@tailwind base;

@layer base {
  :root {
    --primary: #a5bc79;
    --primary-fg: #ffffff;

    --secondary: #eeebd6;

    --bg: #fcf6e5;
    --fg: #5f6a71;

    --muted-fg: #859082;

    --border: #f3f4f6;
  }

  .dark {
    --secondary: #252a2d;

    --bg: #2e343a;
    --fg: #d1c6ad;

    --muted-fg: #9fa9a0;

    --border: #44403c;
  }

  body {
    @apply text-foreground bg-background relative;
  }

  * {
    @apply border-secondary selection:bg-primary selection:text-primary-foreground;
  }

  * {
    @apply scrollbar scrollbar-track-transparent scrollbar-thumb-gray-500/40 scrollbar-thin;
  }
}


p:has(span.tag) {
  @apply !leading-[1.9];
}

span.tag {
  @apply text-sm md:text-base lg:text-lg bg-secondary px-3 py-1 mr-1 rounded-2xl;
}

input[type="checkbox"] {
  @apply checkbox rounded appearance-none border-primary border-2 [--chkfg:transparent] [--chkbg:transparent];
  background-color: var(--chkbg) !important;
  background-image: linear-gradient(-45deg,
      transparent 65%,
      var(--chkbg) 65.99%),
    linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
    linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%),
    linear-gradient(45deg,
      var(--chkbg) 30%,
      var(--chkfg) 30.99%,
      var(--chkfg) 40%,
      transparent 40.99%),
    linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%) !important;
}

input[type="checkbox"][checked] {
  @apply [--chkfg:white] [--chkbg:var(--primary)];
}

.task-list-item input[type="checkbox"] {
  @apply pointer-events-none my-0 !size-5 inline-flex self-center align-middle mb-1;
}

.task-list-item {
  @apply align-middle my-4;
}

.prose :where(blockquote p:last-of-type):not( :where([class~="not-prose"], [class~="not-prose"] *))::after {
  content: none;
}

.prose :where(blockquote p:first-of-type):not( :where([class~="not-prose"], [class~="not-prose"] *))::before {
  content: none;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  @apply font-normal text-foreground;
}

.prose :where(code):not( :where([class~="not-prose"], [class~="not-prose"] *))::before {
  content: none;
}

.prose :where(code):not( :where([class~="not-prose"], [class~="not-prose"] *))::after {
  content: none;
}

code {
  @apply !bg-secondary py-1.5 px-3 rounded-xl;
}

code[data-theme*=" "],
code[data-theme*=" "] span {
  color: var(--shiki-light);
  background-color: var(--shiki-light-bg);
}

.dark code[data-theme*=" "],
.dark code[data-theme*=" "] span {
  color: var(--shiki-dark);
  background-color: var(--shiki-dark-bg);
}

code[data-line-numbers] {
  counter-reset: line;
}

code[data-line-numbers]>[data-line]::before {
  counter-increment: line;
  content: counter(line);

  /* Other styling */
  display: inline-block;
  width: 1rem;
  margin-right: 2rem;
  text-align: right;
  color: gray;
}

code[data-line-numbers-max-digits="2"]>[data-line]::before {
  width: 2rem;
}

code[data-line-numbers-max-digits="3"]>[data-line]::before {
  width: 3rem;
}

span[data-rehype-pretty-code-figure]>code {
  @apply bg-secondary py-1.5 !px-3 rounded-xl;
}

figcaption[data-rehype-pretty-code-title] {
  @apply text-base md:text-lg bg-secondary px-5 pb-5 pt-4 translate-y-4 rounded-t-2xl;
}

body::before {
  @apply absolute inset-0 mix-blend-overlay dark:mix-blend-multiply pointer-events-none dark:opacity-25 opacity-35;
  content: "";
  z-index: 1;
  background: url("../assets/noise.jpeg") repeat center;
}

#sidebar::before {
  @apply absolute inset-0 pointer-events-none opacity-35 dark:opacity-20;
  content: "";
  z-index: 1;
  background: url("../assets/noise.jpeg") repeat center;
  mix-blend-mode: overlay;
}

#floating-nav::before {
  @apply absolute rounded-full inset-0 mix-blend-overlay dark:mix-blend-multiply pointer-events-none dark:opacity-25 opacity-35;
  content: "";
  z-index: 1;
  background: url("../assets/noise.jpeg") repeat center;
}
